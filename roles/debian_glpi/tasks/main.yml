---
# tasks file for glpi

- name: install some package
  apt:
    name:
      - libapache2-mod-php
      - php
      - php-apcu
      - php-bz2
      - php-cas
      - php-curl
      # - php-domxml
      # - php-fileinfo
      - php-geoip
      - php-gd
      - php-imap
      - php-intl
      - php-ldap
      - php-json
      - php-ldap
      - php-mbstring
      - php-mysql
      # - php-openssl
      # - php-session
      # - php-simplexml
      - php-xmlrpc
      - php-xml
      - php-zip
      # - php-zlib
    state: present
    update_cache: yes
    cache_valid_time: 3600

- name: Download glpi.tgz
  get_url:
    url: "https://github.com/glpi-project/glpi/releases/download/{{ glpi_version }}/glpi-{{ glpi_version }}.tgz"
    dest: /tmp/glpi.tgz
    mode: "0755"

- name: Extract glpi.tgz into /var/lib/foo
  ansible.builtin.unarchive:
    src: /tmp/glpi.tgz
    dest: /var/www
    remote_src: true

- name: Recursively change ownership of a directory
  ansible.builtin.file:
    path: "/var/www/glpi"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: /var/www/glpi/config
    dest: /etc/glpi
    owner: www-data
    group: www-data
    mode: "0755"
    remote_src: yes

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: /var/www/glpi/files
    dest: /var/lib/glpi
    owner: www-data
    group: www-data
    mode: "0755"
    remote_src: yes

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /var/log/glpi
    state: directory
    owner: www-data
    group: www-data
    mode: "0755"

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: files/downstream.php
    dest: /var/lib/glpi/inc/
    owner: www-data
    group: www-data
    mode: "0755"

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: files/local_define.php
    dest: /etc/glpi/local_define.php
    owner: www-data
    group: www-data
    mode: "0755"


- name: Create a new database with name 'glpi'
  mysql_db:
    name: glpi
    state: present

- name: Create database user with all database privileges
  community.mysql.mysql_user:
    name: glpi
    password: glpi
    priv: "glpi.*:ALL,GRANT"
    state: present

- name: Execute the command in remote shell; stdout goes to the specified file on the remote
  ansible.builtin.command: "php /var/www/glpi/bin/console db:install --default-language={{ glpi_lang }}  --db-host={{ glpi_hostname }} --db-name={{ glpi_database }} --db-user={{ glpi_username }} --db-password={{ glpi_password }} --no-interaction"

- name: Make sure a service is running
  ansible.builtin.systemd:
    enabled: yes
    name: apache2
    state: started

- name: Make sure a service is running
  ansible.builtin.systemd:
    enabled: yes
    name: mariadb
    state: started

- name: remove install
  ansible.builtin.file:
    path: /var/www/glpi/install/install.php
    state: absent

- name: Remove useless packages from the cache
  apt:
    autoclean: yes

- name: Remove dependencies that are no longer required
  apt:
    autoremove: yes