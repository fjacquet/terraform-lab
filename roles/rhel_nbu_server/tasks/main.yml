---
# tasks file for nbu_server

- name: create a profile with all good program path
  ansible.builtin.copy:
    src: files/nbu.sh
    dest: /etc/profile.d/nbu.sh
    owner: root
    group: root
    mode: "0755"

- name: Enable service httpd and ensure it is not masked
  ansible.builtin.systemd:
    name: firewalld
    enabled: no
    masked: yes

- name: Add repository
  yum_repository:
    name: epel
    description: EPEL YUM repo
    baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/

- name: install some package
  yum:
    name:
      - atop
      - cockpit
      - cockpit-storaged
      - firefox
      - htop
      - libaio
      - libXtst
      - nfs-utils
      - numactl
      - wget
      - xauth
      - xclock
      - xorg-x11-xauth
    state: present


- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items:
    - /usr/openv
    - /backups
    - /backups/dr
    - /backups/msdp
    - /backups/simple

- name: Ensure group "nbwebgrp" exists
  ansible.builtin.group:
    name: nbwebgrp
    state: present

- name: Add the user 'nbwebsvc' with a specific uid and a primary group of 'nbwebgrp'
  ansible.builtin.user:
    name: nbwebsvc
    comment: NetBackup Web Services account
    group: nbwebgrp
    home: /usr/openv/wmc

- name: Create a exxfs2 filesystem on /dev/xvdb
  community.general.filesystem:
    fstype: xfs
    dev: /dev/xvdb

- name: Create a xfs filesystem on /dev/xvdc
  community.general.filesystem:
    fstype: xfs
    dev: /dev/xvdc

- name: /usr/openv
  ansible.posix.mount:
    path: /usr/openv
    src: /dev/xvdb
    fstype: xfs
    opts: defaults
    state: present

- name: Mount /backups
  ansible.posix.mount:
    path: /backups
    src: /dev/xvdc
    fstype: xfs
    opts: defaults
    state: present

- name: kernel tuning
  ansible.posix.sysctl:
    name: kernel.sem
    value: '300  307200  32  1024'
    state: present
    reload: yes


- name: Add or modify nofile soft limit for the user joe
  community.general.pam_limits:
    domain: '*'
    limit_type: soft
    limit_item: nofile
    value: 64000

- name: Add or modify nofile soft limit for the user joe
  community.general.pam_limits:
    domain: '*'
    limit_type: hard
    limit_item: nofile
    value: 64000

- name: Add or modify nofile soft limit for the user joe
  community.general.pam_limits:
    domain: '*'
    limit_type: soft
    limit_item: core
    value: 0

- name: Add or modify nofile soft limit for the user joe
  community.general.pam_limits:
    domain: '*'
    limit_type: hard
    limit_item: core
    value: 0


- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /root/.aws/credentials

- name: This command will change the working directory to somedir/
  ansible.builtin.shell:
    cmd: aws s3 cp s3://installers-fja/{{ linux_package }} /backups/{{ linux_package }}
    chdir: /backups

- name: This command will change the working directory to somedir/
  ansible.builtin.shell:
    cmd: aws s3 cp s3://installers-fja/{{ windows_package }} /backups/{{ windows_package }}
    chdir: /backups

- name: Extract windows_package into /backups
  ansible.builtin.unarchive:
    src: "/backups/{{ linux_package }}"
    dest:  /backups/
    remote_src: yes

- name: Extract windows_package into /backups
  ansible.builtin.unarchive:
    src: "/backups/{{ windows_package }}"
    dest:  /backups/
    remote_src: yes

- name: Unconditionally reboot the machine with all defaults
  reboot:
